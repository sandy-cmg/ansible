# Este fichero es administrado por ANSIBLE. Cualquier cambio
# ser'a sustituido por el config de ansible squid.conf.j2
{% if inventory_hostname == "proxy_hijo" %}
http_port {{ squid_http_port_hijo }}
{% elif inventory_hostname == "proxy_padre1" %}
http_port {{ squid_http_port_padre1 }}
{% elif inventory_hostname == "proxy_padre2" %}
http_port {{ squid_http_port_padre2 }}
{% elif inventory_hostname == "proxy_padre3" %}
http_port {{ squid_http_port_padre3 }}
{% endif %}

# Nombre a mostrar
visible_hostname {{ squid_visible }}
logformat squid {{ squid_logformat }}

{% if inventory_hostname == "proxy_hijou" %}
# Definir las cache valido solamente para los hijos
cache_peer {{ squid_cache_peer_hostname1 }} {{ squid_cache_peer_type }} {{ squid_http_port_padre1 }} {{ squid_cache_peer_icpport }} {{ squid_cache_peer_options }}
cache_peer {{ squid_cache_peer_hostname2 }} {{ squid_cache_peer_type }} {{ squid_http_port_padre2 }} {{ squid_cache_peer_icpport }} {{ squid_cache_peer_options }}
cache_peer {{ squid_cache_peer_hostname3 }} {{ squid_cache_peer_type }} {{ squid_http_port_padre3 }} {{ squid_cache_peer_icpport }} {{ squid_cache_peer_options }}
{% endif %}

{% if inventory_hostname == "proxy_hijo" %}
# Separar LOG por provincias
# Definir bloques IP por cada una de ellas
acl ciudad_1 src {{ squid_provincias['ciudad_1'] }}
acl ciudad_2 src {{ squid_provincias['ciudad2'] }}
{% endif %}

{% if inventory_hostname == "proxy_hijo" %}
# Almacenar los log en sus respectivos ficheros.
cache_access_log {{ squid_log_path }}/ciudad/ciudad_1.log  squid ciudad_1
cache_access_log {{ squid_log_path }}/ciudad/ciudad_2.log  squid ciudad_2
{% endif %}

# Opciones generales para ambos
include {{ squid_include_path }}/opciones_squid.conf

# Proxys padres
{% if inventory_hostname in groups['without_proxy'] %}
# Acls para proxy padre
{%   for acl in squid_acl_padre %}
acl {{ acl.name }} {{ acl.type }} {{ acl.arg }}
{%   endfor %}
{% endif %}

{% if inventory_hostname in groups['without_proxy'] %}
{%   for http_access in squid_http_access_padre %}
http_access {{ http_access.state }} {{ http_access.acl }}
{%   endfor %}
{% endif %}

{% if inventory_hostname == "proxy_hijo" %}
# Acls para las provincias
include {{ squid_include_path }}/dstdomain.conf
{% endif %}

{% if inventory_hostname == "proxy_hijo" %}
# Auntenticacion kerberos para proxys hijos
# External ACls para las provincias auth kerberos
auth_param negotiate program /usr/lib/squid/negotiate_kerberos_auth -d -s HTTP/{{ squid_kerberos_host }}@{{ squid_kerberos_realm }}
auth_param negotiate children 20 startup=0 idle=1
auth_param negotiate keep_alive on
acl auth proxy_auth REQUIRED

include {{ squid_include_path }}/kerberos.conf
{% endif %}

# Para todos
include {{ squid_include_path }}/otras.conf

{% if inventory_hostname == "proxy_hijo" %}
# siempre reevia peticiones directo a servidores origen. No se envian al proxy padre.
# always_direct deny all
# Siempre usa proxy padre para reenviar las peticiones, no se permiten conexiones directas
never_direct allow all
{% endif %}
